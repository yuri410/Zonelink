#include "waterDepth.psh"
#include "ShadowMapping.psh"
#include "hatching.psh"
#include "fog.psh"

    
sampler2D texDet1 : register(s0);
sampler2D texDet2 : register(s1);
sampler2D texDet3 : register(s2);
sampler2D texDet4 : register(s3);

sampler2D texDif : register(s4);
sampler2D texColor : register(s5);
sampler2D texNorm : register(s6);
sampler2D texShd : register(s7);

sampler2D texCliff : register(s8);



float4 k_d : register(c0);
float4 k_a : register(c1);

float4 i_a : register(c2);
float4 i_d : register(c3);

struct PSInput
{
    float2 GlobeCoord : TEXCOORD0; 
    float2 DetailCoord : TEXCOORD1; 

    float4 smLgtPos : TEXCOORD2;
	float3 TangentSpaceLDir : TEXCOORD4;
    float2 Height_Blend : TEXCOORD5;
};

struct PSOutput
{
    float4 Color : COLOR;
};

PSOutput main(PSInput ip)
{
    PSOutput o;
    
    float3 N = 2 * (float3)tex2D(texNorm, ip.GlobeCoord) - 1;
    
    N.xy *= 1.7;
    N = normalize(N);
    
    float ndl = dot(N, ip.TangentSpaceLDir);
	
	float4 index = tex2D(texDif, ip.GlobeCoord);
	

	float4 color = 0;
	
	if (index[0]>=0.1)
	{
		color += (index[0]) * tex2D(texDet1, ip.DetailCoord);
	}
	if (index[1]>=0.1)
	{
		color += (index[1]) * tex2D(texDet2, ip.DetailCoord);
	}
	if (index[2]>=0.1)
	{
		color += (index[2]) * tex2D(texDet3, ip.DetailCoord);
	}
	if (index[3]>=0.1)
	{
		color += (index[3]) * tex2D(texDet4, ip.DetailCoord);
	}
	
	
	
    o.Color = lerp(color , tex2D(texColor, ip.GlobeCoord) + 0.5, 0.4);

    float wgt = saturate(N.z);
    
    if (wgt > 0.2f)
    {
		o.Color.rgb = lerp(tex2D(texCliff, ip.DetailCoord).rgb, o.Color.rgb, (wgt - 0.2)/0.8);
    }
    
    
	float4 amb = i_a * k_a;
	float4 dif = i_d * k_d;
	//dif.xyz *= max(0, ndl);
	
    float2 ShadowTexC = (ip.smLgtPos.xy / ip.smLgtPos.w) * 0.5 + float2( 0.5, 0.5 );
    ShadowTexC.y = 1.0f - ShadowTexC.y;

	float shd = VSM_FILTER(texShd, ShadowTexC, ip.smLgtPos.z);
	
    o.Color = o.Color * (amb + dif );
   
   
    o.Color.rgb *= 0.7 + shd * 0.3;
    
    o.Color = GetColor(o.Color, ip.Height_Blend.x);
    
    
    
    // =========================================================
    float2 hatchTexCoord = ip.DetailCoord*2;
    
	float3 hatchColor = computeHatchColor( ndl * shd, hatchTexCoord);
    
    
    o.Color.rgb *=  hatchColor;
    
    o.Color.rgb = (o.Color.rgb - 0.5) * 1.15 + 0.45;
    
    o.Color.rgb = lerp(o.Color.rgb, FOG_COLOR, ip.Height_Blend.y);
    
    return o;
}
