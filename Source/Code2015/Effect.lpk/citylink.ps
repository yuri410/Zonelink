
sampler2D texDif : register(s0);

float4 k_d : register(c0);
float4 k_a : register(c1);
float4 k_s : register(c2);
float4 k_e : register(c3);
float k_power : register(c4);

float4 i_a : register(c5);
float4 i_d : register(c6);
float4 i_s : register(c7);
float3 lightDir : register(c8);

struct PSInput
{
    float3 TexCoord : TEXCOORD0;
    float3 Normal : TEXCOORD1; 
    float3 ViewDir : TEXCOORD5;
};

struct PSOutput
{
    float4 Color : COLOR;
};

PSOutput main(PSInput ip)
{
    PSOutput o;
    
    float ndl = dot(ip.Normal, lightDir);
	
    float3 R = normalize(2 * ndl * ip.Normal + lightDir);

	float4 amb = i_a * k_a;
	float4 dif = i_d * k_d;
	dif.xyz *= max(0, ndl);
	
	float4 spec = i_s * k_s * pow(max(0, dot(R, ip.ViewDir)), k_power);
	
	float4 clr = tex2D(texDif, ip.TexCoord);
    o.Color = clr * (amb + dif + k_e * 0.01) + float4(0.01*spec.xyz,0);
    o.Color.a *= dot(clr.rgb, float3(0.33,0.33,0.33));
    o.Color.a *= ip.TexCoord.z;
    o.Color.rgb += 1;
    return o;
}
