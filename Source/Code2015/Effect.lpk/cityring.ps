struct PSInput
{
    float2 TexCoord : TEXCOORD0;
    float3 Normal : TEXCOORD1;
    float3 Position : TEXCOORD2;
};

struct PSOutput
{
    float4 Color : COLOR;
};
float3 lightDir : register(c8);

#define pi 3.14159265

float4x4 ownerColors : register(c0);
float4 weights : register(c4);
sampler2D texDif : register(s0);

PSOutput main(PSInput ip)
{
    PSOutput o;
    
    float4 clr = tex2D(texDif, ip.TexCoord);
    float ang = (atan2(ip.Position.z, ip.Position.x) + pi) / (2*pi);
    
   
    float4 w2 = weights;
    w2.yzw += weights.x;
    w2.zw  += weights.y;
    w2.w   += weights.z;
    
	if (ang<w2[3])
	{
		if (ang<w2[2])
		{
			if (ang<w2[1])
			{
				if (ang<w2[0])
				{
					clr = clr * ownerColors[0];
				}
				else
				{
					clr = clr * ownerColors[1];
				}
			}
			else
			{
				clr = clr * ownerColors[2];
			}
		}
		else
		{
			clr = clr * ownerColors[3];
		}
	}
	
    float ndl = dot(ip.Normal, lightDir);
	clr.xyz += 0.01 * max(0, ndl);
	
	o.Color = clr;
    return o;
}
