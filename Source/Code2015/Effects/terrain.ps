#include "waterDepth.psh"

sampler2D texDet1 : register(s0);
sampler2D texDet2 : register(s1);
sampler2D texDet3 : register(s2);
sampler2D texDet4 : register(s3);

sampler2D texDif : register(s4);
sampler2D texColor : register(s5);
sampler2D texNrm : register(s6);

struct PSInput
{
    float2 GlobeCoord : TEXCOORD0; 
    float2 DetailCoord : TEXCOORD1; 
    
	float3 TangentSpaceLDir : TEXCOORD6;
    float2 Height_Blend : TEXCOORD7;
    
    //float LODTest:TEXCOORD5;
};

struct PSOutput
{
    float4 Color : COLOR;
};

PSOutput main(PSInput ip)
{
    PSOutput o;
    
    float3 N = 2 * (float3)tex2D(texNrm, ip.DetailCoord) - 1;
    
    // 地形法线贴图要转换为切线空间的
	float tmp = N.z;
	N.z = N.y * 0.55;
	N.y = tmp;
    N = normalize(N);
    
    float ndl = max(0, dot(N, ip.TangentSpaceLDir));
	
	float4 index = tex2D(texDif, ip.GlobeCoord);
	
	float4 color = 0;
	
	if (index[0]>0.01)
	{
		color += (index[0]) * tex2D(texDet1, ip.DetailCoord*3);
		color += (index[0]) * tex2D(texDet1, ip.DetailCoord*21);
	}
	if (index[1]>0.01)
	{
		color += (index[1]) * tex2D(texDet2, ip.DetailCoord*3);
		color += (index[1]) * tex2D(texDet2, ip.DetailCoord*21);
	}
	if (index[2]>0.01)
	{
		color += (index[2]) * tex2D(texDet3, ip.DetailCoord*3);
		color += (index[2]) * tex2D(texDet3, ip.DetailCoord*21);
	}
	if (index[3]>0.01)
	{
		color += (index[3]) * tex2D(texDet4, ip.DetailCoord*3);
		color += (index[3]) * tex2D(texDet4, ip.DetailCoord*21);
	}
	
    o.Color = ndl * lerp(color , tex2D(texColor, ip.GlobeCoord), ip.Height_Blend.y);
    
    o.Color = GetColor(o.Color, ip.Height_Blend.x);
    
    /*
    if (abs(ip.LODTest)<0.01)
    {
		o.Color += ndl * float4(0.5,0,0,0);
    }
    else if(abs(ip.LODTest - 1)<0.01)
    {
		o.Color += ndl * float4(0,0.5,0,0);
    }
    else if (abs(ip.LODTest - 2)<0.01)
    {
		o.Color += ndl * float4(0,0,0.5,0);
    }
    */
    return o;
}
